Sandeep Singh

Homework 3

1)	What is doctype and why it is used? 
•	The doctype declaration is not a HTML tag, it is very thing in the HTML document. It gives the instruction to the web browser which version of HTML we are using or the markup language page is written in. HTML is the outermost element. 

2)	What are sematic elements? 
•	Semantics elements are elements that have some kind of meaning to them. They are helpful because semantic elements clearly define the content which helps to communicate better with the browser. Some of the examples of semantic elements are:(<article>,<aside>,<details>,<figcaption>,<figure>,<footer>,<header>,<main>,<mark>,<nav>,<section>,<summary>,<time>). 

3)	Why each semantic element is used and give a brief description on each of it? provide an example explaining the importance of using it in your example.
•	Sematic elements are useful because they clearly define the content which helps to communicate better with the browser. For example <article> element specifies independence or a self-contained composition. Article elements are commonly used in blogs, forum posts or newspaper articles. <aside> element, as the name suggests it is commonly used in the aside content like a sidebar. Aside elements are commonly used in advertisements, biography of the author, web applications or related links on the blog. <details> elements provides additional details about the content that the user can hide or view on demand. Detail elements are helpful in putting content inside the <details> tag. <figcaption> elements contains caption to mark up a photo in a document. It can be placed as a first child or last child of <figure> element. Figcaption is great for providing caption under the images. <figure> elements specifies self-contained content used for images, diagrams, photos, code listings or illustrations which can be moved to different page without affecting the main flow. <footer> elements defines a footer or section for a document. You can have many footer elements within the document and some of the examples where footer elements is commonly sitemap, back to top links, related information or contact information.<header> elements as the name suggest defines the header or introductory content or navigational links. Header elements cannot be places in footer, address or another header elements. They are commonly used in logo, icon, or authorship information. <main> elements defines the main content for the document. It should not contain any repeated information and it should be unique. There can be more than one main element and it commonly used to describe main content of the application. <mark> elements used to define the text that you want to mark in your application or if you want to highlight the parts of the text. Mark element would be helpful to use in the application if you want to show the importance of the text. <nav> elements is intended for major navigational links. It is commonly used for to link other pages or parts within the page. <section> elements defines section of the application such as chapters, headers, footers or sections of the document. <summary> elements defines a visible heading for the <details> element. The heading can be clicked to view or hide the details. <time> elements defines a date and time in machine readable format. It is helpful for user to offer any event scheduling for user’s calendar. 

4)	Differenciate each semantic element from other?
•	<article> element specifies independence or a self-contained composition. Article elements are commonly used in blogs, forum posts or newspaper articles. <aside> element, as the name suggests it is commonly used in the aside content like a sidebar. Aside elements are commonly used in advertisements, biography of the author, web applications or related links on the blog. <details> elements provides additional details about the content that the user can hide or view on demand. Detail elements are helpful in putting content inside the <details> tag. <figcaption> elements contains caption to mark up a photo in a document. It can be placed as a first child or last child of <figure> element. Figcaption is great for providing caption under the images. <figure> elements specifies self-contained content used for images, diagrams, photos, code listings or illustrations which can be moved to different page without affecting the main flow. <footer> elements defines a footer or section for a document. You can have many footer elements within the document and some of the examples where footer elements is commonly sitemap, back to top links, related information or contact information.<header> elements as the name suggest defines the header or introductory content or navigational links. Header elements cannot be places in footer, address or another header elements. They are commonly used in logo, icon, or authorship information. <main> elements defines the main content for the document. It should not contain any repeated information and it should be unique. There can be more than one main element and it commonly used to describe main content of the application. <mark> elements used to define the text that you want to mark in your application or if you want to highlight the parts of the text. Mark element would be helpful to use in the application if you want to show the importance of the text. <nav> elements is intended for major navigational links. It is commonly used for to link other pages or parts within the page. <section> elements defines section of the application such as chapters, headers, footers or sections of the document. <summary> elements defines a visible heading for the <details> element. The heading can be clicked to view or hide the details. <time> elements defines a date and time in machine readable format. It is helpful for user to offer any event scheduling for user’s calendar. Overall, semantic elements are helpful it communicated better with the browser with clearly define content. 

5)	What are non-semantic elements give an example? what makes them different?
•	Non-semantic elements does not tell anything about the content. The elements has no meaning at all. Other the other hand, semantic elements defines the content really well. <div> and <span> are couple of the examples of non-semantic elements. They are implemented with the class attribute to define the structure and express the meaning of the content which makes them different. 

6)	Difference between semantic and non-semantic elements?
•	Non-semantic elements does not tell anything about the content. The elements has no meaning at all. <div> and <span> are couple of the examples of non-semantic elements. They are implemented with the class attribute to define the structure and express the meaning of the content which makes them different. Other the other hand, semantic elements are useful because they clearly define the content which helps to communicate better with the browser. They clearly define the meaning to the web pages. 

7)	Difference between <article>,<section> and <div>?
•	<article> element specifies independence or a self-contained composition. Article elements are commonly used in blogs, forum posts or newspaper articles. Whereas, <section> elements defines section of the application such as chapters, headers, footers or sections of the document. On the other hand, <div> tag defines a division or a section in the document. It can be used to group block-elements to format with CSS. Article are section are both semantic elements with clearly defined content and div is a non-semantic elements which does not tell anything about the content. 


References

•	http://www.htmlgoodies.com/html5/markup/the-doctype-tag-and-its-effect-on-page-rendering.html#fbid=010WqJnj67b

•	http://www.w3schools.com/html/html5_semantic_elements.asp

•	https://developer.mozilla.org/en-US/docs/Web/HTML/Element/footer

•	http://findnerd.com/list/view/Non-Semantic-Elements-and-Semantic-Elements-in-HTML5/10153/

•	http://www.html-5-tutorial.com/doctype.htm
